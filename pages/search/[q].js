import Head from 'next/head'
import { useState } from 'react'
import Card from '../../components/Card/Card'
import Filter from '../../components/Filter/Filter'
// import LoadCardsBtn from '../components/LoadCardsBtn/LoadCardsBtn'
import { useRouter } from 'next/router'
import useSWR from 'swr'
import TextLoading from '../../components/TextLoading/TextLoading'
import FetchDataAlert from '../../components/FetchDataAlert/FetchDataAlert'
import Button from '../../components/Button/Button'
import { useMenuContext } from '../../context/contextApp'
import { homeHeader } from '../../dictionary/dictionary'
import Link from 'next/link'
import parseCookie from '../../parseCookie/parseCookie'
import { jwtVerify } from '../../auth/jwt'
import GetStartedBtn from '../../components/GetStartedBtn/GetStartedBtn'

const fetcher = (...args) => fetch(...args).then((res) => res.json())

const index = ({ user }) => {

    
    const router = useRouter()

    const { data, error } = useSWR(`/api${router.asPath}`, fetcher)

    const { locale } = useMenuContext()
    const home = homeHeader[locale]

    console.log(user);

  // const [isLoad, setIsLoad] = useState(false)

  // const loadMore = () => {
  //   setIsLoad(true)
  // }

  return (
    <>
      <Head>
        <title>Help student</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main className="mt-24 mb-5 mx-auto px-4 max-w-screen-lg lg:px-8">
        <div className="text-center max-w-xl mx-auto">
          <h1 className="text-4xl font-semibold">
            { home.title }
          </h1>
          <p className="mt-3 text-gray-500">
            { home.desc }
          </p>
        </div>

        {
          user?.value?.loggedIn ? '' : (
            <div>
              <GetStartedBtn />
            </div>
          )
        }
        <Filter />

        <h3 className="mt-12 text-2xl text-gray-800 font-semibold">
          { locale == 'ar' ? 'نتائج البحث' : 'Search results' }
        </h3>
        <ul className="mt-12 space-y-6">
          {
            !data ? <TextLoading /> : (
              data.posts.length > 0 ? <Card posts={data.posts} /> : (
                <>
                  <FetchDataAlert info={locale == 'ar' ? 'عذرا, لم نتمكن من ايجاد ماتبحث عنه' : "Sorry, we couldn't find what you're looking for."} />
                  <div className="flex justify-center">
                    <Link href="/">
                        <a className={`${locale == 'ar' ? ' flex-row-reverse' : ''} mt-2 flex items-center justify-center text-blue-600 font-semibold`}>
                          { locale == 'ar' ? 'الرجوع للرئيسية' : 'Go back home' }
                            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mx-1" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clipRule="evenodd" />
                            </svg>
                        </a>
                    </Link>
                  </div>
                </>
              )
            )
          }
        </ul>
        <div className="mt-7 flex justify-center">
          {/* <LoadCardsBtn
            isLoad={isLoad}
            onClick={loadMore}
          /> */}
        </div>
      </main>
    </>
  )
}

export const getServerSideProps = async ({ req }) => {


  const { token } = parseCookie(req)
  const user = token ? jwtVerify(token) : {}

  return {
    props: {
      user
    }
  }
}

export default index